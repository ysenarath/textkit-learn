[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "textkit-learn"
requires-python = ">=3.8"
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: MacOS",
    "Operating System :: Microsoft :: Windows",
    "Operating System :: POSIX :: Linux",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Programming Language :: Python",
    "Programming Language :: Rust",
    "Typing :: Typed",
]
description = 'Helps computers to understand human languages.'
readme = "README.md"
license = "MIT"
keywords = []
authors = [{ name = "Yasas Senarath" }]
dependencies = [
    "pandas",
    "polars",
    "numpy",
    "scikit-learn>=1.4.0,!=1.3",
    "torch",
    "werkzeug",
    "pyarrow",
    "transformers",
    "datasets",
    "evaluate",
    "accelerate",
    "nltk",
    "sortedcontainers",
    "hnswlib",
    "flashtext",
    "octoflow~=0.1.8",
    "langdetect",
]
dynamic = ["version"]

[project.urls]
Homepage = "https://github.com/ysenarath/textkit-learn"
Repository = "https://github.com/ysenarath/textkit-learn"
Issues = "https://github.com/ysenarath/textkit-learn/issues"
Changelog = "https://github.com/ysenarath/textkit-learn/blob/master/CHANGELOG.md"

[tool.hatch.version]
path = "src/tklearn/__init__.py"

[tool.hatch.build.targets.wheel]
packages = ["src/tklearn"]

[tool.ruff]
extend-include = ["*.ipynb"]
target-version = "py38"
line-length = 88
indent-width = 4
preview = true # preview features & checks, use with caution
extend-select = [ # features in preview
    "W292", # missing-newline-at-end-of-file
]
include = ["src/**/*.py", "src/**/*.pyi", "tests/**/*.py", "tests/**/*.pyi"]

[tool.ruff.lint]
# Enable Pyflakes (`F`) and a subset of the pycodestyle (`E`)  codes by default.
# Unlike Flake8, Ruff doesn't enable pycodestyle warnings (`W`) or
# McCabe complexity (`C901`) by default.
select = ["E4", "E7", "E9", "F", "I"]
ignore = [
    "F601", # dict key literal ... repeated
]

[tool.ruff.lint.isort]
known-first-party = ["octoflow"]

[tool.ruff.format]
# Like Black, use double quotes for strings.
quote-style = "double"
# Like Black, indent with spaces, rather than tabs.
indent-style = "space"
# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false
# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"
# Enable auto-formatting of code examples in docstrings. Markdown,
# reStructuredText code/literal blocks and doctests are all supported.
#
# This is currently disabled by default, but it is planned for this
# to be opt-out in the future.
docstring-code-format = false
# Set the line length limit used when formatting code snippets in
# docstrings.
#
# This only has an effect when the `docstring-code-format` setting is
# enabled.
docstring-code-line-length = "dynamic"
